#!/usr/bin/env node
var CommanderWrapper = require('./utils/commander-wrapper');
var Run = require('./utils/run');
var config = require('./utils/get-config')();
var Promise = require('bluebird');

var program = CommanderWrapper(function(commander) {
  return commander
    .option('-w, --watch', 'keep the tester running and run as things change')
    .option('-n, --no-build', 'dont build before testing');
});

if (!config.test) {
  process.exit(0);
}

var buildPromise;
if (program.build) {
  buildPromise = Run.one('sb-build');
} else {
  buildPromise = Promise.resolve();
}

var commands = [
  ['sb-test-browser'],
];

commands.map(function(command) {
  command.push('--no-build');

  if (program.watch) {
    command.push('--watch');
  }

  return command;
});

buildPromise.then(function() {
  Run.all(commands, {failAfter: true});
});
