#!/usr/bin/env node
var config = require('./utils/get-config')();
var PathsExist = require('./utils/paths-exist');
var path = require('path');
var log = require('./utils/log');
var Run = require('./utils/run');
var CommanderWrapper = require('./utils/commander-wrapper');
var Promise = require('bluebird');

var program = CommanderWrapper(function(commander) {
  return commander
    .option('-w, --watch', 'keep the tester running and run as things change')
    .option('-b, --browsers', 'comma seperated list of browsers to run on')
    .option('-n, --no-build', 'dont build before testing');
});

if (!config.test) {
  process.exit(0);
}

var buildPromise;
if (program.build) {
  buildPromise = Run.one('sb-build');
} else {
  buildPromise = Promise.resolve();
}

var KARMA_BROWSERS = ['Chrome', 'Firefox', 'IE', 'Safari'];
var command = [
  'karma',
  'start',
  'karma.config.js'
];

if (program.watch) {
  command.push('--auto-watch');
  command.push('--no-single-run');
} else  {
  command.push('--no-auto-watch');
  command.push('--single-run');
}

if (program.browsers) {
  command.push('--browsers');
  command.push(program.browsers.join(','));
}

buildPromise.then(function() {
  return Run.one(command);
});
